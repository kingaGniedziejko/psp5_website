{"ast":null,"code":"var _jsxFileName = \"/Users/igahupalo/Pictures/GitHub/psp5_website/frontend/src/components/elements/Post.js\";\nimport React, { Component } from \"react\";\nimport Attachment from \"./Attachment\";\nimport Moment from \"react-moment\";\nimport \"moment/locale/pl\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nexport class Post extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imgUrl: '',\n      isLoaded: false,\n      isExpanded: false,\n      excerptLength: 150\n    };\n  }\n\n  componentDidMount() {\n    const {\n      featured_media\n    } = this.props.post;\n    axios.get(`/wp-json/wp/v2/media/${featured_media}`).then(res => this.setState({\n      imgUrl: res.data.media_details.sizes.full.source_url,\n      isLoaded: true,\n      isExpanded: false\n    }));\n  }\n\n  extendButtonClick() {\n    this.setState({\n      isExpanded: !this.state.isExpanded\n    });\n  }\n\n  render() {\n    const {\n      title,\n      date,\n      acf\n    } = this.props.post;\n    const {\n      text\n    } = acf;\n    const excerpt = text.substring(0, this.state.excerptLength) + \"...\";\n    const {\n      imgUrl,\n      isLoaded,\n      isExpanded\n    } = this.state;\n    const attachments = [acf.attachment1, acf.attachment2, acf.attachment3, acf.attachment4, acf.attachment5];\n    const {\n      postNr\n    } = this.props;\n    const postDirection = postNr % 2;\n\n    if (isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post \" + (postDirection ? \"post-left\" : \"post-right\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: imgUrl,\n        alt: title.rendered,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }), isExpanded ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 40\n        }\n      }, attachments.map(att => {\n        if (att) return /*#__PURE__*/React.createElement(Attachment, {\n          key: att.id,\n          className: \"post-attachment\",\n          title: att.title,\n          url: att.url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 49\n          }\n        });else return \"\";\n      })) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"post-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, title.rendered), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"post-date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Moment, {\n        locale: \"pl\",\n        format: \"DD MMMM YYYYr. HH:mm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }, date)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"post-text\",\n        dangerouslySetInnerHTML: {\n          __html: isExpanded ? text : excerpt\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"post-button button-accent-2\",\n        onClick: this.extendButtonClick.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, isExpanded ? \"mniej\" : \"wiÄ™cej\")));\n    }\n\n    return null;\n  }\n\n}\nPost.propTypes = {\n  post: PropTypes.object.isRequired,\n  postNr: PropTypes.number\n};\nexport default Post;","map":{"version":3,"sources":["/Users/igahupalo/Pictures/GitHub/psp5_website/frontend/src/components/elements/Post.js"],"names":["React","Component","Attachment","Moment","PropTypes","axios","Post","state","imgUrl","isLoaded","isExpanded","excerptLength","componentDidMount","featured_media","props","post","get","then","res","setState","data","media_details","sizes","full","source_url","extendButtonClick","render","title","date","acf","text","excerpt","substring","attachments","attachment1","attachment2","attachment3","attachment4","attachment5","postNr","postDirection","rendered","map","att","id","url","__html","bind","propTypes","object","isRequired","number"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport Attachment from \"./Attachment\"\n\nimport Moment from \"react-moment\";\nimport \"moment/locale/pl\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\nexport class Post extends Component {\n    state = {\n        imgUrl: '',\n        isLoaded: false,\n        isExpanded: false,\n        excerptLength: 150\n    }\n\n    static propTypes = {\n        post: PropTypes.object.isRequired,\n        postNr: PropTypes.number\n    }\n\n    componentDidMount() {\n        const {featured_media} = this.props.post;\n        axios.get(`/wp-json/wp/v2/media/${featured_media}`)\n            .then(res => this.setState({\n                imgUrl: res.data.media_details.sizes.full.source_url,\n                isLoaded: true,\n                isExpanded: false\n            }));\n    }\n\n    extendButtonClick(){\n        this.setState({\n            isExpanded: !this.state.isExpanded\n        });\n    }\n\n    render() {\n        const {title, date, acf} = this.props.post;\n        const {text} = acf;\n        const excerpt = text.substring(0, this.state.excerptLength)+\"...\";\n        const {imgUrl, isLoaded, isExpanded} = this.state;\n        const attachments = [\n            acf.attachment1,\n            acf.attachment2,\n            acf.attachment3,\n            acf.attachment4,\n            acf.attachment5\n        ];\n\n        const {postNr} = this.props;\n        const postDirection = postNr%2;\n\n        if (isLoaded){\n            return (\n                <div className={\"post \" + (postDirection ? \"post-left\" : \"post-right\")}>\n                    <div>\n                        <img src={imgUrl} alt={title.rendered}/>\n                        { isExpanded ? <div>\n                            { attachments.map(att => {\n                                if (att) return <Attachment key={att.id} className={\"post-attachment\"} title={att.title} url={att.url}/>\n                                else return \"\";\n                            })}\n                        </div> : \"\" }\n                    </div>\n                    <div>\n                        <h2 className={\"post-title\"}>{title.rendered}</h2>\n                        <small className={\"post-date\"}>\n                            <Moment locale={\"pl\"} format=\"DD MMMM YYYYr. HH:mm\">{date}</Moment>\n                        </small>\n                        <p className={\"post-text\"} dangerouslySetInnerHTML={{ __html: isExpanded ? text : excerpt}} />\n                        <button className={\"post-button button-accent-2\"}\n                                onClick={this.extendButtonClick.bind(this)}>{isExpanded ? \"mniej\" : \"wiÄ™cej\"}\n                        </button>\n                    </div>\n                </div>\n            );\n        }\n        return null;\n    }\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}